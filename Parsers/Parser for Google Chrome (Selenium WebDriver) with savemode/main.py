# Задача: напишите парсер, который будет открывать сайт в браузере без его отображения
# на экране, загружать содержимое страницы и выводить его в консоль Пайтона.

# *** Модифицируйте программу таким образом, чтобы парсинг выводился сразу в текстовый файл
# *** и, чтобы текстовый файл назывался также, как и имя сайта.

# Из файла site_utils.py подтягиваем логику извлечения базового имени сайта из URL для использовании имени сайта.
from site_utils import get_site_name

# Из файла parser.py подтягиваем настройки для Google Chrome и логику загрузки страницы.
from parser import get_Chrome_options, parse_page

# Проверка на то, что скрипт запускается как основная программа, а не импортируется как модуль.
if __name__ == "__main__":

    # Здесь указываем сайт, который нам нужно спарсить.
    target_url = "https://psma.ru/"

    # Вызываем функцию get_site_name для получения имени сайта на основе URL, чтобы
    # использовать его в названии файла.
    site_name = get_site_name(target_url)

    # Создаёт название файла, объединяя имя файла и расширение .txt
    filename = f'{site_name}.txt'

    # Инициализация драйвера, загрузка настроек браузера Google Chrome.
    driver = get_Chrome_options()

    # Загружаем страницу по URL в браузере, вызывая функцию parse_page,
    # и сохраняем исходный HTML-код в переменную content.
    # В данном случае не url, а target_url, потому что url описан логикой
    # в файле parser.py, а target_url описан здесь, в него нужно передавать ссылку.
    content = parse_page(driver, target_url)

    # Проверяем, что содержимое успешно получено и не равно None.
    if content:

        # Выводим весь HTML-код страницы в консоль.
        print(content)
        try:

            # Открываем файл с именем сгенерированным ранее, для записи в текстовом режиме с кодировкой utf-8.
            with open(filename, 'w', encoding='utf-8') as f:
                # Записываем HTML-код страницы в файл.
                f.write(content)
            # Выводит сообщение о том, что содержимое записано в файл.
            print(f'Содержимое сохранено в файл: {filename}')

        except Exception as e:
            print(f'Ошибка при сохранении файла: {e}')

    # Закрываем браузер и высвобождаем ресурсы.
    driver.quit()